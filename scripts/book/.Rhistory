library(rstan)       # bayes underpinnings
library(tidybayes)   # pretty bayes draws and plots
library(cowplot)
library(plyr)        # data wrangling
library(tidyverse)   # data wrangling
library(furrr)       # parallel purrr mapping
# Chunk 4: path
# res_path <- "https://github.com/emoriebeck/big-five-prediction/blob/master"
data_path <- "/Volumes/Emorie/data"
# res_path <- "~/Box/emorie post doc/01_projects/01_dementia/01_prediction"
res_path <- "/Volumes/Emorie/projects/dementia/prediction"
wd <- "/Volumes/Emorie/projects/dementia/prediction"
# Chunk 5: codebook
# list of all codebook sheets
sheets <- sprintf("%s/codebooks/master_codebook_09.04.20.xlsx", res_path) %>% excel_sheets()
# function for reading in sheets
read_fun <- function(x){
sprintf("%s/codebooks/master_codebook_09.04.20.xlsx", res_path) %>% read_xlsx(., sheet = x)
}
# read in sheets and index source
codebook <- tibble(
study = sheets,
codebook = map(study, read_fun)
)
## short and long versions of names of all categories for later use
studies <-      c("ROS", "RADC-MAP", "EAS", "ADRC"    , "SATSA", "HRS", "LISS", "GSOEP")
studies_long <- c("ROS", "Rush-MAP", "EAS", "WUSM-MAP", "SATSA", "HRS", "LISS", "GSOEP")
stdcolors <- tibble(
studies = c("Overall", studies)
, std_text = str_remove_all(studies, "[-]")
, colors = c("black", "#332288", "#88ccee", "#44aa99", "#117733", "#999933", #"#ddcc77", "#cc6677",
"#332288", "#88ccee", "#44aa99")#, "#117733", "#999933", "#ddcc77")
, lt = c(rep("solid", 6), rep("dotted", 3)))
traits <- codebook$codebook[[2]] %>% filter(category == "pers") %>%
select(long_name = Construct, short_name = name)
outcomes <- codebook$codebook[[2]] %>% filter(category == "out") %>%
select(long_name = Construct, short_name = name, link, colnm)
moders <- codebook$codebook[[2]] %>% filter(category == "mod") %>%
select(long_name = Construct, short_name = name, short_term = old_term, long_term = new_term)
covars <- codebook$codebook[[2]] %>% filter(category == "covariates") %>%
select(long_name = Construct, short_name = name, desc = new_term)
# used personality waves
p_waves <- sprintf("%s/codebooks/tables.xlsx", res_path) %>%
read_xlsx(., sheet = "Table 2")
# Chunk 6
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
stdcolors <- tibble(
studies = c("Overall", studies)
, studies_long = c("Overall", studies_long)
, std_text = str_remove_all(studies, "[-]")
, colors = c("black", "#332288", "#88ccee", "#44aa99", "#117733", "#999933", #"#ddcc77", "#cc6677",
"#332288", "#88ccee", "#44aa99")#, "#117733", "#999933", "#ddcc77")
, lt = c(rep("solid", 6), rep("dotted", 3)))
loadRData <- function(fileName, cov, obj, folder){
#loads an RData file, and returns it
path <- sprintf("%s/results/%s/%s/%s", wd, folder, cov, fileName)
load(path)
get(ls()[grepl(obj, ls())])
}
## load in "fixed" effects
## first get file names
nested_mega_simp <- tibble(Covariate = c("fully", "shared", "standard", "butOne", "unadjusted")) %>%
mutate(file = map(Covariate, ~list.files(sprintf("%s/results/predicted/%s", wd, .)))) %>%
unnest(file) %>%
separate(file, c("Outcome", "Trait", "Moderator"), sep = "_", remove = F) %>%
## read in the files
mutate(Moderator = str_remove(Moderator, ".RData"),
pred.fx = map2(file, Covariate, ~loadRData(.x, .y, "pred.fx", "predicted")),
pred.rx = map2(file, Covariate, ~loadRData(.x, .y, "pred.rx", "predicted"))) %>%
select(-file) %>%
left_join(
outcomes %>% select(Outcome = short_name, link)
) %>%
mutate_at(vars(pred.fx, pred.rx), ~ifelse(link == "factor", map(., ~(.) %>% mutate_at(vars(pred, lower, upper), exp)), .))
nested_mega_simp
ipd_std_se_plot_fun <- function(df, outcome, trait, mod, cov, link){
fctr_vars <- c("gender", "smokes", "alcohol", "race", "stroke", "cancer", "diabetes", "heartProb")
print(paste(outcome, mod))
o <- mapvalues(outcome, outcomes$short_name, outcomes$long_name, warn_missing = F)
trt <- mapvalues(trait, traits$short_name, traits$long_name, warn_missing = F)
cv <- cov# cv <- mapvalues(cov, covars$short_name, covars$long_name, warn_missing = F)
m <- mapvalues(mod, moders$short_name, moders$long_name, warn_missing = F)
d <- round(max(abs(min(df$pred)), abs(max(df$pred))), 3)
# mini <- if(d > 2) .05 else 0-(d+(d/5))
# maxi <- if(d > 2) 2.05 else 0+d+(d/5)
# lim <- c(mini, maxi)
# brk <- if(d > 2) c(0, 1, 2) else{round(c(0-d-(d/10), 0, 0+d+(d/10)),2)}
# lab <- if(d > 2){c("0", "1", "2")} else{str_remove(c(round(0-d-(d/10),2), 0, round(0+d+(d/10),2)), "^0")}
titl <- if(mod == "none"){sprintf("%s: %s", o, trt)} else {sprintf("%s: %s x %s Simple Effects", o, trt, m)}
# colnames(df)[colnames(df) == mod] <- "mod_value"
# df <- df %>% unclass %>% data.frame
# df$mod_value <- df[,mod]
# df <- df %>% select(-all_of(mod)) %>% as_tibble
# # df <- df %>% group_by(study, p_value) %>% summarize_at(vars(mod_value, pred, lower, upper), mean) %>% ungroup()
# if(class(df$mod_value) %in% c("factor", "character")){
#   df <- df %>% mutate(mod_fac = factor(mod_value))
#   } else {
#     if(mod == "age") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-10, 0, 10), labels = c("-10 yrs", "60", "+10 yrs")))
#     else if(mod == "education") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-5, 0, 5), labels = c("-5 yrs", "12 yrs", "+5 yrs")))
#     else df <- df %>% select(p_value, study, mod_value) %>% distinct() %>%
#         group_by(study) %>% mutate(mod_fac = factor(mod_value, levels = unique(mod_value), labels = c("-1 SD", "M", "+1 SD"))) %>%
#         left_join(df)
#     }
std <- unique(df$study)
cols <- (stdcolors %>% filter(studies_long %in% std))$colors
lt <- (stdcolors %>% filter(studies_long %in% std))$lt
ht <- length(unique(df$mod_fac))
if(link == "factor") {mini <- round(min(df$pred),2); maxi <- round(max(df$pred),2)} else {mini <- floor(min(df$pred)); maxi <- ceiling(max(df$pred))}
df <- df %>%
mutate(study = factor(study, levels = stdcolors$studies),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup()
df %>%
ggplot(aes(x = p_value
, y = pred
, group  = study))  +
scale_y_continuous(limits = c(mini,maxi)
, breaks = round(seq(mini, maxi, length.out = 4), 2)
, labels = round(seq(mini, maxi, length.out = 4), 2)) +
scale_linetype_manual(values = lt) +
scale_color_manual(values = cols) +
scale_fill_manual(values = cols) +
scale_size_manual(values = c(2,.8)) +
# geom_ribbon(data = df %>% filter(study == "Overall")
#             , aes(ymin = lower
#                 , ymax = upper
#                 , fill = study)
#             , alpha = .25) +
geom_line(aes(linetype = study, color = study, size = gr)) +
labs(x = "Personality (POMP)"
, y = if(link == "factor") paste(o, "(OR)") else o
, title = titl
, linetype = "Sample"
, color = "Sample"
, fill = "Sample") +
guides(size = "none", fill = "none") +
facet_wrap(~mod_fac, nrow = 1) +
theme_classic() +
theme(legend.position = "bottom"
, plot.title = element_text(face = "bold", size = rel(1.2), hjust = .5)
, plot.subtitle = element_text(size = rel(1.1), hjust = .5)
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white")
, axis.text = element_text(color = "black"))
ggsave(file = sprintf("%s/results/figures/study-specific-simple-effects/%s_%s_%s_%s.png", wd, outcome, trait, mod, cov), width = 3*ht, height = 5)
}
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
debug(ipd_std_se_plot_fun)
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
std
nested_mega_simp
stdcolors
ipd_std_se_plot_fun <- function(df, outcome, trait, mod, cov, link){
fctr_vars <- c("gender", "smokes", "alcohol", "race", "stroke", "cancer", "diabetes", "heartProb")
print(paste(outcome, mod))
o <- mapvalues(outcome, outcomes$short_name, outcomes$long_name, warn_missing = F)
trt <- mapvalues(trait, traits$short_name, traits$long_name, warn_missing = F)
cv <- cov# cv <- mapvalues(cov, covars$short_name, covars$long_name, warn_missing = F)
m <- mapvalues(mod, moders$short_name, moders$long_name, warn_missing = F)
d <- round(max(abs(min(df$pred)), abs(max(df$pred))), 3)
# mini <- if(d > 2) .05 else 0-(d+(d/5))
# maxi <- if(d > 2) 2.05 else 0+d+(d/5)
# lim <- c(mini, maxi)
# brk <- if(d > 2) c(0, 1, 2) else{round(c(0-d-(d/10), 0, 0+d+(d/10)),2)}
# lab <- if(d > 2){c("0", "1", "2")} else{str_remove(c(round(0-d-(d/10),2), 0, round(0+d+(d/10),2)), "^0")}
titl <- if(mod == "none"){sprintf("%s: %s", o, trt)} else {sprintf("%s: %s x %s Simple Effects", o, trt, m)}
# colnames(df)[colnames(df) == mod] <- "mod_value"
# df <- df %>% unclass %>% data.frame
# df$mod_value <- df[,mod]
# df <- df %>% select(-all_of(mod)) %>% as_tibble
# # df <- df %>% group_by(study, p_value) %>% summarize_at(vars(mod_value, pred, lower, upper), mean) %>% ungroup()
# if(class(df$mod_value) %in% c("factor", "character")){
#   df <- df %>% mutate(mod_fac = factor(mod_value))
#   } else {
#     if(mod == "age") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-10, 0, 10), labels = c("-10 yrs", "60", "+10 yrs")))
#     else if(mod == "education") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-5, 0, 5), labels = c("-5 yrs", "12 yrs", "+5 yrs")))
#     else df <- df %>% select(p_value, study, mod_value) %>% distinct() %>%
#         group_by(study) %>% mutate(mod_fac = factor(mod_value, levels = unique(mod_value), labels = c("-1 SD", "M", "+1 SD"))) %>%
#         left_join(df)
#     }
std <- unique(df$study)
cols <- (stdcolors %>% filter(studies %in% std))$colors
lt <- (stdcolors %>% filter(studies %in% std))$lt
ht <- length(unique(df$mod_fac))
if(link == "factor") {mini <- round(min(df$pred),2); maxi <- round(max(df$pred),2)} else {mini <- floor(min(df$pred)); maxi <- ceiling(max(df$pred))}
df <- df %>%
mutate(study = factor(study, levels = stdcolors$studies, labels = stdcolors$studies_long),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup()
df %>%
ggplot(aes(x = p_value
, y = pred
, group  = study))  +
scale_y_continuous(limits = c(mini,maxi)
, breaks = round(seq(mini, maxi, length.out = 4), 2)
, labels = round(seq(mini, maxi, length.out = 4), 2)) +
scale_linetype_manual(values = lt) +
scale_color_manual(values = cols) +
scale_fill_manual(values = cols) +
scale_size_manual(values = c(2,.8)) +
# geom_ribbon(data = df %>% filter(study == "Overall")
#             , aes(ymin = lower
#                 , ymax = upper
#                 , fill = study)
#             , alpha = .25) +
geom_line(aes(linetype = study, color = study, size = gr)) +
labs(x = "Personality (POMP)"
, y = if(link == "factor") paste(o, "(OR)") else o
, title = titl
, linetype = "Sample"
, color = "Sample"
, fill = "Sample") +
guides(size = "none", fill = "none") +
facet_wrap(~mod_fac, nrow = 1) +
theme_classic() +
theme(legend.position = "bottom"
, plot.title = element_text(face = "bold", size = rel(1.2), hjust = .5)
, plot.subtitle = element_text(size = rel(1.1), hjust = .5)
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white")
, axis.text = element_text(color = "black"))
ggsave(file = sprintf("%s/results/figures/study-specific-simple-effects/%s_%s_%s_%s.png", wd, outcome, trait, mod, cov), width = 3*ht, height = 5)
}
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
debug(ipd_std_se_plot_fun)
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
filter(Outcome == "dementia") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
df
df$study
unique(df$study)
ipd_std_se_plot_fun <- function(df, outcome, trait, mod, cov, link){
fctr_vars <- c("gender", "smokes", "alcohol", "race", "stroke", "cancer", "diabetes", "heartProb")
print(paste(outcome, mod))
o <- mapvalues(outcome, outcomes$short_name, outcomes$long_name, warn_missing = F)
trt <- mapvalues(trait, traits$short_name, traits$long_name, warn_missing = F)
cv <- cov# cv <- mapvalues(cov, covars$short_name, covars$long_name, warn_missing = F)
m <- mapvalues(mod, moders$short_name, moders$long_name, warn_missing = F)
d <- round(max(abs(min(df$pred)), abs(max(df$pred))), 3)
# mini <- if(d > 2) .05 else 0-(d+(d/5))
# maxi <- if(d > 2) 2.05 else 0+d+(d/5)
# lim <- c(mini, maxi)
# brk <- if(d > 2) c(0, 1, 2) else{round(c(0-d-(d/10), 0, 0+d+(d/10)),2)}
# lab <- if(d > 2){c("0", "1", "2")} else{str_remove(c(round(0-d-(d/10),2), 0, round(0+d+(d/10),2)), "^0")}
titl <- if(mod == "none"){sprintf("%s: %s", o, trt)} else {sprintf("%s: %s x %s Simple Effects", o, trt, m)}
# colnames(df)[colnames(df) == mod] <- "mod_value"
# df <- df %>% unclass %>% data.frame
# df$mod_value <- df[,mod]
# df <- df %>% select(-all_of(mod)) %>% as_tibble
# # df <- df %>% group_by(study, p_value) %>% summarize_at(vars(mod_value, pred, lower, upper), mean) %>% ungroup()
# if(class(df$mod_value) %in% c("factor", "character")){
#   df <- df %>% mutate(mod_fac = factor(mod_value))
#   } else {
#     if(mod == "age") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-10, 0, 10), labels = c("-10 yrs", "60", "+10 yrs")))
#     else if(mod == "education") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-5, 0, 5), labels = c("-5 yrs", "12 yrs", "+5 yrs")))
#     else df <- df %>% select(p_value, study, mod_value) %>% distinct() %>%
#         group_by(study) %>% mutate(mod_fac = factor(mod_value, levels = unique(mod_value), labels = c("-1 SD", "M", "+1 SD"))) %>%
#         left_join(df)
#     }
std <- unique(df$study)
cols <- (stdcolors %>% filter(studies_long %in% std))$colors
lt <- (stdcolors %>% filter(studies_long %in% std))$lt
ht <- length(unique(df$mod_fac))
if(link == "factor") {mini <- round(min(df$pred),2); maxi <- round(max(df$pred),2)} else {mini <- floor(min(df$pred)); maxi <- ceiling(max(df$pred))}
df <- df %>%
mutate(study = factor(study, levels = stdcolors$studies, labels = stdcolors$studies_long),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup()
df %>%
ggplot(aes(x = p_value
, y = pred
, group  = study))  +
scale_y_continuous(limits = c(mini,maxi)
, breaks = round(seq(mini, maxi, length.out = 4), 2)
, labels = round(seq(mini, maxi, length.out = 4), 2)) +
scale_linetype_manual(values = lt) +
scale_color_manual(values = cols) +
scale_fill_manual(values = cols) +
scale_size_manual(values = c(2,.8)) +
# geom_ribbon(data = df %>% filter(study == "Overall")
#             , aes(ymin = lower
#                 , ymax = upper
#                 , fill = study)
#             , alpha = .25) +
geom_line(aes(linetype = study, color = study, size = gr)) +
labs(x = "Personality (POMP)"
, y = if(link == "factor") paste(o, "(OR)") else o
, title = titl
, linetype = "Sample"
, color = "Sample"
, fill = "Sample") +
guides(size = "none", fill = "none") +
facet_wrap(~mod_fac, nrow = 1) +
theme_classic() +
theme(legend.position = "bottom"
, plot.title = element_text(face = "bold", size = rel(1.2), hjust = .5)
, plot.subtitle = element_text(size = rel(1.1), hjust = .5)
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white")
, axis.text = element_text(color = "black"))
ggsave(file = sprintf("%s/results/figures/study-specific-simple-effects/%s_%s_%s_%s.png", wd, outcome, trait, mod, cov), width = 3*ht, height = 5)
}
debug(ipd_std_se_plot_fun)
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
filter(Outcome == "dementia") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
std
df %>%
ggplot(aes(x = p_value
, y = pred
, group  = study))  +
scale_y_continuous(limits = c(mini,maxi)
, breaks = round(seq(mini, maxi, length.out = 4), 2)
, labels = round(seq(mini, maxi, length.out = 4), 2)) +
scale_linetype_manual(values = lt) +
scale_color_manual(values = cols) +
scale_fill_manual(values = cols) +
scale_size_manual(values = c(2,.8)) +
# geom_ribbon(data = df %>% filter(study == "Overall")
#             , aes(ymin = lower
#                 , ymax = upper
#                 , fill = study)
#             , alpha = .25) +
geom_line(aes(linetype = study, color = study, size = gr)) +
labs(x = "Personality (POMP)"
, y = if(link == "factor") paste(o, "(OR)") else o
, title = titl
, linetype = "Sample"
, color = "Sample"
, fill = "Sample") +
guides(size = "none", fill = "none") +
facet_wrap(~mod_fac, nrow = 1) +
theme_classic() +
theme(legend.position = "bottom"
, plot.title = element_text(face = "bold", size = rel(1.2), hjust = .5)
, plot.subtitle = element_text(size = rel(1.1), hjust = .5)
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white")
, axis.text = element_text(color = "black"))
df
df$study
df %>% filter(is.na(study))
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
filter(Outcome == "dementia") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
unique(df$study)
stdcolors
df %>% filter(is.na(study))
df %>%
mutate(study2 = factor(study, levels = stdcolors$studies, labels = stdcolors$studies_long),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study,study2, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup() %>% filter(is.na(study2))
df %>%
mutate(study2 = factor(study, levels = stdcolors$studies_long, labels = stdcolors$studies_long),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study,study2, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup() %>% filter(is.na(study2))
ipd_std_se_plot_fun <- function(df, outcome, trait, mod, cov, link){
fctr_vars <- c("gender", "smokes", "alcohol", "race", "stroke", "cancer", "diabetes", "heartProb")
print(paste(outcome, mod))
o <- mapvalues(outcome, outcomes$short_name, outcomes$long_name, warn_missing = F)
trt <- mapvalues(trait, traits$short_name, traits$long_name, warn_missing = F)
cv <- cov# cv <- mapvalues(cov, covars$short_name, covars$long_name, warn_missing = F)
m <- mapvalues(mod, moders$short_name, moders$long_name, warn_missing = F)
d <- round(max(abs(min(df$pred)), abs(max(df$pred))), 3)
# mini <- if(d > 2) .05 else 0-(d+(d/5))
# maxi <- if(d > 2) 2.05 else 0+d+(d/5)
# lim <- c(mini, maxi)
# brk <- if(d > 2) c(0, 1, 2) else{round(c(0-d-(d/10), 0, 0+d+(d/10)),2)}
# lab <- if(d > 2){c("0", "1", "2")} else{str_remove(c(round(0-d-(d/10),2), 0, round(0+d+(d/10),2)), "^0")}
titl <- if(mod == "none"){sprintf("%s: %s", o, trt)} else {sprintf("%s: %s x %s Simple Effects", o, trt, m)}
# colnames(df)[colnames(df) == mod] <- "mod_value"
# df <- df %>% unclass %>% data.frame
# df$mod_value <- df[,mod]
# df <- df %>% select(-all_of(mod)) %>% as_tibble
# # df <- df %>% group_by(study, p_value) %>% summarize_at(vars(mod_value, pred, lower, upper), mean) %>% ungroup()
# if(class(df$mod_value) %in% c("factor", "character")){
#   df <- df %>% mutate(mod_fac = factor(mod_value))
#   } else {
#     if(mod == "age") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-10, 0, 10), labels = c("-10 yrs", "60", "+10 yrs")))
#     else if(mod == "education") df <- df %>% mutate(mod_fac = factor(mod_value, levels = c(-5, 0, 5), labels = c("-5 yrs", "12 yrs", "+5 yrs")))
#     else df <- df %>% select(p_value, study, mod_value) %>% distinct() %>%
#         group_by(study) %>% mutate(mod_fac = factor(mod_value, levels = unique(mod_value), labels = c("-1 SD", "M", "+1 SD"))) %>%
#         left_join(df)
#     }
std <- unique(df$study)
cols <- (stdcolors %>% filter(studies_long %in% std))$colors
lt <- (stdcolors %>% filter(studies_long %in% std))$lt
ht <- length(unique(df$mod_fac))
if(link == "factor") {mini <- round(min(df$pred),2); maxi <- round(max(df$pred),2)} else {mini <- floor(min(df$pred)); maxi <- ceiling(max(df$pred))}
df <- df %>%
mutate(study = factor(study, levels = stdcolors$studies_long, labels = stdcolors$studies_long),
lower = ifelse(lower < mini, mini, lower),
upper = ifelse(upper > maxi, maxi, upper),
gr = ifelse(study == "Overall", "Overall", "study")) %>%
group_by(study, mod_fac, p_value, gr) %>%
summarize_at(vars(pred, lower, upper), mean) %>%
ungroup()
df %>%
ggplot(aes(x = p_value
, y = pred
, group  = study))  +
scale_y_continuous(limits = c(mini,maxi)
, breaks = round(seq(mini, maxi, length.out = 4), 2)
, labels = round(seq(mini, maxi, length.out = 4), 2)) +
scale_linetype_manual(values = lt) +
scale_color_manual(values = cols) +
scale_fill_manual(values = cols) +
scale_size_manual(values = c(2,.8)) +
# geom_ribbon(data = df %>% filter(study == "Overall")
#             , aes(ymin = lower
#                 , ymax = upper
#                 , fill = study)
#             , alpha = .25) +
geom_line(aes(linetype = study, color = study, size = gr)) +
labs(x = "Personality (POMP)"
, y = if(link == "factor") paste(o, "(OR)") else o
, title = titl
, linetype = "Sample"
, color = "Sample"
, fill = "Sample") +
guides(size = "none", fill = "none") +
facet_wrap(~mod_fac, nrow = 1) +
theme_classic() +
theme(legend.position = "bottom"
, plot.title = element_text(face = "bold", size = rel(1.2), hjust = .5)
, plot.subtitle = element_text(size = rel(1.1), hjust = .5)
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white")
, axis.text = element_text(color = "black"))
ggsave(file = sprintf("%s/results/figures/study-specific-simple-effects/%s_%s_%s_%s.png", wd, outcome, trait, mod, cov), width = 3*ht, height = 5)
}
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
filter(Outcome == "dementia") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
nested_simp_std_se <- nested_mega_simp %>%
filter(Covariate != "fully") %>%
# filter(map_lgl(pred.rx, ~!is.null(.)))
mutate(pred.fx = map(pred.fx, ~(.) %>% mutate(study = "Overall")),
comb.fx = map2(pred.fx, pred.rx, full_join)) %>%
select(-pred.fx, -pred.rx) %>%
# filter(Moderator %in% c("age", "education")) %>%
mutate(pmap(list(comb.fx, Outcome, Trait, Moderator, Covariate, link), ipd_std_se_plot_fun))
18*9500
18*95
